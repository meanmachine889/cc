// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Waitlist {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    createdAt DateTime @default(now())
}

model Industry {
    id              String             @id @default(cuid())
    walletAddress   String             @unique
    companyName     String
    registrationDoc String?            // URL to uploaded document
    verified        Boolean            @default(false)
    bondAmount      Float              @default(0)
    createdAt       DateTime           @default(now())
    updatedAt       DateTime           @updatedAt

    carbonBalance   CarbonCreditBalance?
    emissions       EmissionReport[]
    bonds           Bond[]
}

model CarbonCreditBalance {
    id              String   @id @default(cuid())
    industryId      String   @unique
    industry        Industry @relation(fields: [industryId], references: [id], onDelete: Cascade)

    cctBalance      Float    @default(0) // Amount of CCT tokens held
    totalPurchased  Float    @default(0) // Total CCT purchased
    totalBurned     Float    @default(0) // Total CCT burned for compliance

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}

model Auction {
    id              String   @id @default(cuid())
    batchNumber     Int      @unique

    totalTokens     Float    // Total CCT tokens in this auction
    tokensRemaining Float    // Tokens still available
    startPrice      Float    // Starting price in USDC
    currentPrice    Float    // Current price in USDC
    reservePrice    Float    // Minimum price in USDC

    startTime       DateTime
    endTime         DateTime
    status          String   @default("active") // active, completed, cancelled

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    bids            AuctionBid[]
}

model AuctionBid {
    id          String   @id @default(cuid())
    auctionId   String
    auction     Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)

    walletAddress String
    amount      Float    // Amount of CCT tokens bid for
    pricePerToken Float  // Price per token in USDC
    totalCost   Float    // Total USDC cost
    status      String   @default("pending") // pending, accepted, refunded

    createdAt   DateTime @default(now())
}

model EmissionReport {
    id              String   @id @default(cuid())
    industryId      String
    industry        Industry @relation(fields: [industryId], references: [id], onDelete: Cascade)

    reportPeriod    String   // e.g., "2025-01" for January 2025
    co2Emitted      Float    // Tonnes of CO2 emitted
    cctBurned       Float    // CCT tokens burned for compliance
    status          String   @default("submitted") // submitted, verified, compliant, non-compliant

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}

model Bond {
    id              String   @id @default(cuid())
    industryId      String
    industry        Industry @relation(fields: [industryId], references: [id], onDelete: Cascade)

    amount          Float    // Amount of USDC bonded
    yieldEarned     Float    @default(0) // Yield earned from DAMM vault
    status          String   @default("active") // active, liquidated, withdrawn

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}
